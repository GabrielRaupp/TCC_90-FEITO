{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPassword=()=>{const[email,setEmail]=useState('');const handleSubmit=async event=>{event.preventDefault();try{const response=await fetch('http://localhost:3000/forgot-password',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});if(!response.ok){const errorMessage=await response.text();// Captura a resposta como texto\nthrow new Error(errorMessage||'Erro ao solicitar redefinição de senha');}const data=await response.json();alert(data.message);}catch(error){alert(error.message);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-mail:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Enviar E-mail de Redefini\\xE7\\xE3o de Senha\"})]});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ForgotPassword","email","setEmail","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorMessage","text","Error","data","json","alert","message","error","onSubmit","children","htmlFor","type","id","value","onChange","e","target","required"],"sources":["/home/redes/Gabriel_Raupp/Test_Front/src/components/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.text(); // Captura a resposta como texto\n        throw new Error(errorMessage || 'Erro ao solicitar redefinição de senha');\n      }\n\n      const data = await response.json();\n      alert(data.message);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"email\">E-mail:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\">Enviar E-mail de Redefinição de Senha</button>\n    </form>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAQ,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uCAAuC,CAAE,CACpEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,KAAM,CAAC,CAChC,CAAC,CAAC,CAEF,GAAI,CAACK,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAE;AAC5C,KAAM,IAAI,CAAAC,KAAK,CAACF,YAAY,EAAI,wCAAwC,CAAC,CAC3E,CAEA,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CACrB,CAAE,MAAOC,KAAK,CAAE,CACdF,KAAK,CAACE,KAAK,CAACD,OAAO,CAAC,CACtB,CACF,CAAC,CAED,mBACErB,KAAA,SAAMuB,QAAQ,CAAEnB,YAAa,CAAAoB,QAAA,eAC3BxB,KAAA,QAAAwB,QAAA,eACE1B,IAAA,UAAO2B,OAAO,CAAC,OAAO,CAAAD,QAAA,CAAC,SAAO,CAAO,CAAC,cACtC1B,IAAA,UACE4B,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVC,KAAK,CAAE1B,KAAM,CACb2B,QAAQ,CAAGC,CAAC,EAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,QAAQ,MACT,CAAC,EACC,CAAC,cACNlC,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,6CAAqC,CAAQ,CAAC,EAChE,CAAC,CAEX,CAAC,CAED,cAAe,CAAAvB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}